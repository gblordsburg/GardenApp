"""removed garden and plant tables to add back the correct ones, since sqlite cannot handle alter table requests

Revision ID: 8d2523fee7bd
Revises: f77b792d8253
Create Date: 2018-04-03 17:30:09.127664

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8d2523fee7bd'
down_revision = 'f77b792d8253'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_garden_created', table_name='garden')
    op.drop_index('ix_garden_name', table_name='garden')
    op.drop_table('garden')
    op.drop_index('ix_plant_timestamp', table_name='plant')
    op.drop_table('plant')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plant',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('body', sa.VARCHAR(length=140), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=140), nullable=True),
    sa.Column('garden_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_plant_timestamp', 'plant', ['timestamp'], unique=False)
    op.create_table('garden',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=140), nullable=True),
    sa.Column('created', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_garden_name', 'garden', ['name'], unique=False)
    op.create_index('ix_garden_created', 'garden', ['created'], unique=False)
    # ### end Alembic commands ###
